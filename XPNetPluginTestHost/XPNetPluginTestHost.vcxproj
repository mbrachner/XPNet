<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>15.0</VCProjectVersion>
    <ProjectGuid>{22B62521-93DC-4E9B-AA44-774FDD3E3413}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <RootNamespace>XPNetPluginTestHost</RootNamespace>
    <WindowsTargetPlatformVersion>10.0.16299.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
    <IntDir>$(ProjectDir)$(Platform)\$(Configuration)\</IntDir>
    <OutDir>$(SolutionDir)build\$(Platform)\$(Configuration)\</OutDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <LinkIncremental>true</LinkIncremental>
    <OutDir>$(SolutionDir)build\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(ProjectDir)$(Platform)\$(Configuration)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>$(SolutionDir)build\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(ProjectDir)$(Platform)\$(Configuration)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>false</LinkIncremental>
    <IntDir>$(ProjectDir)$(Platform)\$(Configuration)\</IntDir>
    <OutDir>$(SolutionDir)build\$(Platform)\$(Configuration)\</OutDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>APL=0;IBM=1;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>$(XPLANESDKPATH)\CHeaders\Widgets;$(XPLANESDKPATH)\CHeaders\Wrappers;$(XPLANESDKPATH)\CHeaders\XPLM;$(SolutionDir)XPNet.Native;$(SolutionDir)XPLMTestHarness;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <AdditionalDependencies>XPLM_64.lib;XPNet.Native.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(SolutionDir)build\$(Platform)\$(Configuration)\;$(SolutionDir)build\$(PlatformTarget)\$(Configuration)\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <GenerateDebugInformation>DebugFull</GenerateDebugInformation>
    </Link>
    <PostBuildEvent>
      <Command>rem Get the test plugins and their respective dependencies into the target folder.
dotnet publish "$(SolutionDir)XPNet.CLR" -c $(ConfigurationName) -o "$(OutputPath)"
dotnet publish "$(SolutionDir)XPNet.LoggerPlugin" -c $(ConfigurationName) -o "$(OutputPath)"
dotnet publish "$(SolutionDir)XPNet.CLR.TestPlugins" -c $(ConfigurationName) -o "$(OutputPath)"
dotnet publish "$(SolutionDir)XPNet.GraphicsTestPlugin" -c $(ConfigurationName) -o "$(OutputPath)"

rem Need a .NET runtime to build against.
dotnet install -i "$(OutputPath)64\dotnet-windows" -r dotnet -p win -a x64 -v 2.1
dotnet install -i "$(OutputPath)64\dotnet-macos" -r dotnet -p osx -a x64 -v 2.1
dotnet install -i "$(OutputPath)32\dotnet-windows" -r dotnet -p win -a x86 -v 2.1

rem For VS Test Explorer integration - let it know this is a gtest project.
echo &gt; $(TargetPath).is_google_test</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>APL=0;IBM=1;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>$(XPLANESDKPATH)\CHeaders\Widgets;$(XPLANESDKPATH)\CHeaders\Wrappers;$(XPLANESDKPATH)\CHeaders\XPLM;$(SolutionDir)XPNet.Native;$(SolutionDir)XPLMTestHarness;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <AdditionalDependencies>XPLM.lib;XPNet.Native.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(SolutionDir)build\$(Platform)\$(Configuration)\;$(SolutionDir)build\$(PlatformTarget)\$(Configuration)\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <GenerateDebugInformation>DebugFull</GenerateDebugInformation>
    </Link>
    <PostBuildEvent>
      <Command>rem Get the test plugins and their respective dependencies into the target folder.
dotnet publish "$(SolutionDir)XPNet.CLR" -c $(ConfigurationName) -o "$(OutputPath)"
dotnet publish "$(SolutionDir)XPNet.LoggerPlugin" -c $(ConfigurationName) -o "$(OutputPath)"
dotnet publish "$(SolutionDir)XPNet.CLR.TestPlugins" -c $(ConfigurationName) -o "$(OutputPath)"
dotnet publish "$(SolutionDir)XPNet.GraphicsTestPlugin" -c $(ConfigurationName) -o "$(OutputPath)"

rem Need a .NET runtime to build against.
dotnet install -i "$(OutputPath)64\dotnet-windows" -r dotnet -p win -a x64 -v 2.1
dotnet install -i "$(OutputPath)64\dotnet-macos" -r dotnet -p osx -a x64 -v 2.1
dotnet install -i "$(OutputPath)32\dotnet-windows" -r dotnet -p win -a x86 -v 2.1

rem For VS Test Explorer integration - let it know this is a gtest project.
echo &gt; $(TargetPath).is_google_test</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>APL=0;IBM=1;WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>$(XPLANESDKPATH)\CHeaders\Widgets;$(XPLANESDKPATH)\CHeaders\Wrappers;$(XPLANESDKPATH)\CHeaders\XPLM;$(SolutionDir)XPNet.Native;$(SolutionDir)XPLMTestHarness;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <AdditionalDependencies>XPLM.lib;XPNet.Native.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(SolutionDir)build\$(Platform)\$(Configuration)\;$(SolutionDir)build\$(PlatformTarget)\$(Configuration)\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>
    <PostBuildEvent>
      <Command>rem Get the test plugins and their respective dependencies into the target folder.
dotnet publish "$(SolutionDir)XPNet.CLR" -c $(ConfigurationName) -o "$(OutputPath)"
dotnet publish "$(SolutionDir)XPNet.LoggerPlugin" -c $(ConfigurationName) -o "$(OutputPath)"
dotnet publish "$(SolutionDir)XPNet.CLR.TestPlugins" -c $(ConfigurationName) -o "$(OutputPath)"
dotnet publish "$(SolutionDir)XPNet.GraphicsTestPlugin" -c $(ConfigurationName) -o "$(OutputPath)"

rem Need a .NET runtime to build against.
dotnet install -i "$(OutputPath)64\dotnet-windows" -r dotnet -p win -a x64 -v 2.1
dotnet install -i "$(OutputPath)64\dotnet-macos" -r dotnet -p osx -a x64 -v 2.1
dotnet install -i "$(OutputPath)32\dotnet-windows" -r dotnet -p win -a x86 -v 2.1

rem For VS Test Explorer integration - let it know this is a gtest project.
echo &gt; $(TargetPath).is_google_test</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>APL=0;IBM=1;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>$(XPLANESDKPATH)\CHeaders\Widgets;$(XPLANESDKPATH)\CHeaders\Wrappers;$(XPLANESDKPATH)\CHeaders\XPLM;$(SolutionDir)XPNet.Native;$(SolutionDir)XPLMTestHarness;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <AdditionalDependencies>XPLM_64.lib;XPNet.Native.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(SolutionDir)build\$(Platform)\$(Configuration)\;$(SolutionDir)build\$(PlatformTarget)\$(Configuration)\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>
    <PostBuildEvent>
      <Command>rem Get the test plugins and their respective dependencies into the target folder.
dotnet publish "$(SolutionDir)XPNet.CLR" -c $(ConfigurationName) -o "$(OutputPath)"
dotnet publish "$(SolutionDir)XPNet.LoggerPlugin" -c $(ConfigurationName) -o "$(OutputPath)"
dotnet publish "$(SolutionDir)XPNet.CLR.TestPlugins" -c $(ConfigurationName) -o "$(OutputPath)"
dotnet publish "$(SolutionDir)XPNet.GraphicsTestPlugin" -c $(ConfigurationName) -o "$(OutputPath)"

rem Need a .NET runtime to build against.
dotnet install -i "$(OutputPath)64\dotnet-windows" -r dotnet -p win -a x64 -v 2.1
dotnet install -i "$(OutputPath)64\dotnet-macos" -r dotnet -p osx -a x64 -v 2.1
dotnet install -i "$(OutputPath)32\dotnet-windows" -r dotnet -p win -a x86 -v 2.1

rem For VS Test Explorer integration - let it know this is a gtest project.
echo &gt; $(TargetPath).is_google_test</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include="stdafx.h" />
    <ClInclude Include="StdCapture.h" />
    <ClInclude Include="targetver.h" />
    <ClInclude Include="TestCore.h" />
    <ClInclude Include="XPMock.h" />
    <ClInclude Include="XPNetPluginTestHost.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="CommandTests.cpp" />
    <ClCompile Include="DataRefTests.cpp" />
    <ClCompile Include="DrawTests.cpp" />
    <ClCompile Include="FlightLoopTests.cpp" />
    <ClCompile Include="GoogleTestRunner.h" />
    <ClCompile Include="LifecycleDeathTests.cpp" />
    <ClCompile Include="LifecycleTests.cpp" />
    <ClCompile Include="LoggingTests.cpp" />
    <ClCompile Include="MessageTests.cpp" />
    <ClCompile Include="PluginTestsBase.cpp" />
    <ClCompile Include="stdafx.cpp" />
    <ClCompile Include="TestCore.cpp" />
    <ClCompile Include="XPNetPluginTestHost.cpp" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>